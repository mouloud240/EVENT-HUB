
# Define the worker processes for Nginx
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Log configuration
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # Set up environment variable-based configuration
    env NODE_ENV;

    # For development
    server {
        listen 80;
        server_name localhost;

        # Check if NODE_ENV is 'development' to proxy requests to the dev server
        location / {
            if ($NODE_ENV = "development") {
                proxy_pass http://dev-server:3000;  # Example: forwarding to a dev app running on port 3000
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                break;
            }
            
            # Default behavior - Serve static files for production
            root /usr/share/nginx/html;
            index index.html;
        }
    }

    # For production
    server {
        listen 80;
        server_name yourdomain.com;

        location / {
            # Serve static files from the production build
            root /path/to/your/production/build;
            try_files $uri $uri/ /index.html;
        }

        # Handle API requests by proxying them to the backend server (e.g., Node.js server)
        location /api/ {
            proxy_pass http://backend-server:3000;  # Adjust to match your production backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # For error handling (optional)
    error_page  500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

